{
  "openapi": "3.0.2",
  "info": {
    "title": "conflict-resolver-service API",
    "version": "0.9.2",
    "description": "The Conflict-Resolver Service (CSR) can be queried to provide a signed resolution about the non-repudiation protocol associated to an invoice being valid or invalid. It could be invoked by either the consumer or the provider.",
    "contact": {
      "name": "Juan Hern√°ndez Serrano",
      "email": "j.hernandez@upc.edu"
    },
    "license": {
      "name": "EUPL-1.2"
    }
  },
  "paths": {
    "/verification": {
      "post": {
        "tags": [
          "Protected"
        ],
        "summary": "verification request of completness of non-repudiation protocol regarding a data exchange",
        "operationId": "verification",
        "x-eov-operation-handler": "routes/verification",
        "requestBody": {
          "description": "initiates a verification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the ID and type of the created account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedResolution"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/dispute": {
      "post": {
        "tags": [
          "Protected"
        ],
        "summary": "initiate a dispute",
        "operationId": "dispute",
        "x-eov-operation-handler": "routes/dispute",
        "requestBody": {
          "description": "initiates a dispute",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisputeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the ID and type of the created account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedResolution"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/oidc/login/consumer": {
      "get": {
        "tags": [
          "OpenID Connect"
        ],
        "summary": "starts a OIDC login flow for getting a valid JWT bearer token for an i3-MARKET consumer",
        "responses": {
          "302": {
            "description": "redirection to the OIDC server auth endpoint"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/oidc/login/provider": {
      "get": {
        "tags": [
          "OpenID Connect"
        ],
        "summary": "starts a OIDC login flow for getting a valid JWT bearer token for an i3-MARKET provider",
        "responses": {
          "302": {
            "description": "redirection to the OIDC server auth endpoint"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/oidc/cb": {
      "get": {
        "tags": [
          "OpenID Connect"
        ],
        "summary": "OIDC callback endpoint that will retrieve the access token and te ID token and provide an API JWT bearer token",
        "security": [
          {
            "OpenIdConnect": [
              "vc:consumer",
              "vc:provider"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "an API JWT bearer token to use to access the protected resources",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OidcCbOutput"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "OpenIdConnect": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://identity1.i3-market.eu/release2/oidc/.well-known/openid-configuration"
      }
    },
    "schemas": {
      "VerificationInput": {
        "title": "VerificationInput",
        "description": "Expected input is a verification request as a compact JSON Web Signature (JWS) along with the public key to verify it. For the request to be accepted, it MUST be signed with the same key it was used during the data exchange for this verification.\n",
        "type": "object",
        "required": [
          "verificationRequest"
        ],
        "properties": {
          "verificationRequest": {
            "$ref": "#/components/schemas/CompactJWS"
          }
        }
      },
      "DisputeInput": {
        "title": "DisputeInput",
        "description": "Expected input is a dispute request as a compact JSON Web Signature (JWS) along with the public key to verify it. For the request to be accepted, it MUST be signed with the same key it was used during the data exchange for this verification.\n",
        "type": "object",
        "required": [
          "disputeRequest"
        ],
        "properties": {
          "disputeRequest": {
            "$ref": "#/components/schemas/CompactJWS"
          }
        }
      },
      "OidcCbOutput": {
        "title": "OidcCbOutput",
        "description": "An API JWT bearer token that provides access to protected endpoints\n",
        "type": "object",
        "required": [
          "disputeRequest",
          "publicJwk"
        ],
        "properties": {
          "jwtBearerToken": {
            "$ref": "#/components/schemas/CompactJWS"
          },
          "allowedEndpoints": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "/verification",
                "/dispute"
              ]
            }
          }
        }
      },
      "SignedResolution": {
        "title": "SignedResolution",
        "type": "object",
        "required": [
          "signedResolution"
        ],
        "properties": {
          "signedResolution": {
            "description": "A signed resolution object as a compact JWS signed by the CRS. The payload of a resolution is:\n\n```typescript\n{\n  type: 'verification' | 'dispute'\n  dataExchangeId: string // the unique id of this data exchange\n  resolution: 'completed' | 'not completed' | 'accepted' | 'denied' // whether the data exchange has been verified to be complete ('completed' | 'not completed') or if a dispute has been 'accpeted' (valid claim) or 'denied'.\n  iat: nume // unix timestamp stating when it was verified\n  iss: string // the public key of the CRS in JWK\n}\n```\n"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "title": "Error",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CompactJWS": {
        "title": "CompactJWS",
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+$"
      }
    }
  },
  "tags": [
    {
      "name": "Protected",
      "description": "Endpoints only available for i3-MARKET authenticated consumers/providers"
    },
    {
      "name": "OpenID Connect"
    }
  ]
}